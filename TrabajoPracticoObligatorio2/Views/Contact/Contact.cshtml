@using System.Web.UI.WebControls
@model TrabajoPracticoObligatorio2.Models.FormData
@{
    ViewBag.Title = "Contact";
}

<main>
    <section>
        <div id="menu"></div>
    </section>
    <section>
        <div class="contact-container">
            <div class="form">
                <div style="text-align: center;">
                    <h1 style="color: #44D62C; font-size: 42px;">RAZER SUPPORT</h1>
                    <h2>Contact us!</h2>
                    <div class="errorsBox" id="errorMessages"></div>
                    <form>
                        <label for="name">Name*:</label>
                        <input type="text" name="name" id="name" placeholder="Moscoso Maximiliano">
                        <label for="email">Email*:</label>
                        <input type="email" name="email" id="email" placeholder="name@mail.com">
                        <label for="phone">Phone*:</label>
                        <input type="text" name="phone" id="phone" onkeypress="return isNumberKey(event)" placeholder="123456789">
                        <label for="message">Message*:</label>
                        <textarea name="message" id="message" cols="30" rows="10" placeholder="Some text"></textarea>
                        <div style="text-align: center;">
                            <input type="button" value="Submit" id="buttonForm" onclick="ValidateData()">
                        </div>
                    </form>
                    <h3>All fields are requiered!</h3>
                </div>
            </div>
            <div class="map">
                <h1>Attention schedule</h1>
                <h2>Monday to Saturday: 09:30-20:00</h2>
                <h2>Sundays: 09:30-13:30 </h2>
                <h1>Mail</h1>
                <h2>razer@company.com</h2>
                <h1>Direction</h1>
                <h2>2035 Corte Del Nogal Ste 101, Carlsbad, CA 92011</h2>
                <div class="container-map">
                    <div id="map" style="width: 100%; height: 400px;"></div>
                </div>
            </div>
        </div>
    </section>
</main>

<script>
    //Detect if want to use letters on the number input
    function isNumberKey(evt) {
        const charCode = (evt.which) ? evt.which : evt.keyCode;
        return !(charCode > 31 && (charCode < 48 || charCode > 57));
    }
    
    function ValidateData()
    {
        const name = document.getElementById('name');
        const email = document.getElementById('email');
        const phone = document.getElementById('phone');
        const message = document.getElementById('message');
    
        const button = document.getElementById('buttonForm');
    
        const errorMessages = document.getElementById('errorMessages');
    
        const ck_alphanumerics = /^[A-Za-z0-9-]/;
        
        
        let messages = [];
        
    
        if (name.value === '' || name.value == null)
            messages.push("Name field its empty");
    
        else if (name.value.length < 4 && ck_alphanumerics.test(name.value.length)) {
            messages.push("The name can only contain alphanumeric characters");
            messages.push("The name its too short");
        }
    
    
        else if (name.value.length > 30 && ck_alphanumerics.test(name.value.length)) {
            messages.push("The name its too long");
            messages.push("The name can only contain alphanumeric characters");
        }
    
        if (email.value === '' || email.value == null)
            messages.push("Email field its empty");
    
        if (phone.value === '' || phone.value == null)
            messages.push("Business field its empty");
    
        else if (phone.value.length > 20) {
            messages.push("Business message cannot be more than 20 characters")
        }
    
        if (message.value === '' || message.value == null)
            messages.push("Message field its empty");
    
        else if (message.value.length < 10) {
            messages.push("Message its too short")
        }
    
        else if (message.value.length > 100) {
            messages.push("Message its too long")
        }
    
        var formatTextError = "<ul>"
    
        if (messages.length > 0) {
            for (let index = 0; index < messages.length; index++) {
                const element = messages[index];
    
                formatTextError += "<li>" + element + "</li>";
    
            }
    
            formatTextError += "</ul>";
    
            errorMessages.innerHTML = formatTextError;
            return;
        }
        console.log("FGFKF");
        AJAXData();
    }
        
    
    function AJAXData()
    {
        var url = "@Url.Action("Form","Contact")";
        var contactData = { 
           Name: $("#name").val(),
           Email: $("#email").val(),
           Phone: $("#phone").val(),
           Message: $("#message").val()
        }
        
        $.ajax({  
            type: "POST",  
            url: url,  
            data: contactData,  
            success: function(data) {  
                console.log(data);
                if(data.res)
                    alert(data.msg);
            },  
            error: function() {  
                alert("Error occured!!")  
            }  
        });
    }
    
</script>

@Scripts.Render("~/Scripts/googleMap.js")

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAB5gWj09Kgwjf9Jw1GU0rbeNh8IrkFyhQ&callback=initMap"
        type="text/javascript"></script>

